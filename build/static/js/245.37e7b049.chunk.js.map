{"version":3,"file":"static/js/245.37e7b049.chunk.js","mappings":"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","sources":["utils/functions/formatNumber.js","components/VideoCard.jsx","components/CommentContainer.jsx","components/ChatMessage.jsx","utils/functions/helper.js","components/LiveChat.jsx","components/ReadMoreCard.jsx","components/RecommendedVideos.jsx","components/routes/Watch.jsx"],"sourcesContent":["export const formatNumber = (num) => {\n   const map = [\n        { suffix: 'T', threshold: 1e12 },\n        { suffix: 'B', threshold: 1e9 },\n        { suffix: 'M', threshold: 1e6 },\n        { suffix: 'K', threshold: 1e3 },\n        { suffix: '', threshold: 1 },\n      ];\n      const found = map.find((x) => Math.abs(num) >= x.threshold);\n      if (found) {\n        const formatted = (num / found.threshold).toFixed(2) + found.suffix;\n        return formatted;\n      }\n    \n      return num;\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  YOUTUBE_CHANNEL_API,\n  YOUTUBE_VIDEO_DETAILS_API_BY_ID,\n} from \"../utils/data/youtube-api\";\nimport { Link } from \"react-router-dom\";\nimport Shimmer from \"./Shimmer\";\nimport { formatNumber } from \"../utils/functions/formatNumber\";\n\nconst VideoCard = ({ info }) => {\n  const [videoDetails, setVideoDetails] = useState([]);\n  const [viewCount, setViewCount] = useState();\n  const [channelInfo, setChannelInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const isMenuOpen = useSelector((store) => store.menu.isMenuOpen);\n\n  const {\n    snippet: {\n      channelId,\n      title,\n      channelTitle,\n      thumbnails,\n      liveBroadcastContent,\n    },\n    id,\n  } = info;\n  const video_id = id?.videoId || id;\n\n  useEffect(() => {\n    ;(async () => {\n      const res = await fetch(YOUTUBE_VIDEO_DETAILS_API_BY_ID(video_id));\n      const data = await res.json();\n      setVideoDetails(data?.items[0]);\n      setViewCount(data?.items[0]?.statistics?.viewCount);\n    })();\n  }, [video_id]);\n\n  useEffect(() => {\n    try {\n      const getChannelDetails = async () => {\n        const res = await fetch(YOUTUBE_CHANNEL_API(channelId));\n        const json = await res.json();\n        setChannelInfo(json?.items[0]?.snippet?.thumbnails?.default);\n        setIsLoading(false);\n      };\n      getChannelDetails();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Shimmer />\n      ) : (\n        <Link to={\"/watch?v=\" + video_id}>\n          <div\n            className={`shadow-md rounded-lg p-3 bg-white h-full ${\n              isMenuOpen ? \"  w-96\" : \" w-[22rem]\"\n            } max-sm:w-[22rem]`}\n          >\n            <div>\n              <img\n                className={`object-cover rounded-lg \n          ${isMenuOpen ? \" h-[13rem] w-96\" : \"h-[12rem] w-[22rem]\"} \n          max-sm:h-[11rem] max-sm:w-80`}\n                src={thumbnails.medium.url}\n                alt={title}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className=\"flex gap-4 mt-2 justify-between\">\n              <div className=\"w-12\">\n                <img\n                  src={channelInfo?.url}\n                  alt=\"user icon\"\n                  className=\"w-12 h-12 object-cover rounded-full\"\n                />\n              </div>\n              <div className=\"w-[85%]\">\n                <h3 className=\"font-bold text-lg max-sm:text-sm line-clamp-2\">\n                  {title}\n                </h3>\n                <p className=\"text-md font-medium text-gray-600\">\n                  {channelTitle}\n                </p>\n                <p className=\"text-md font-medium text-red-600\">\n                  {!liveBroadcastContent === \"none\" && liveBroadcastContent}\n                </p>\n                <p className=\"text-md font-medium text-gray-600\">\n                  {formatNumber(viewCount)} views\n                </p>\n              </div>\n            </div>\n          </div>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default VideoCard;\n","import React, { useEffect, useState } from \"react\";\nimport { YOUTUBE_COMMENT_THREAD_API } from \"../utils/data/youtube-api\";\n\nconst commentData = [\n  {\n    name: \"Khushi Johri\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [\n      {\n        name: \"Khushi Johri\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [],\n      },\n    ],\n  },\n  {\n    name: \"Khushi Johri\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [],\n  },\n  {\n    name: \"Khushi Johri\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [\n      {\n        name: \"Khushi Johri\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [],\n      },\n    ],\n  },\n  {\n    name: \"Khushi Johri\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [\n      {\n        name: \"Khushi Johri\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [\n          {\n            name: \"Khushi Johri\",\n            text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n            replies: [],\n          },\n        ],\n      },\n      {\n        name: \"Khushi Johri\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [],\n      },\n    ],\n  },\n  {\n    name: \"Khushi Johri\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n    replies: [\n      {\n        name: \"Khushi Johri\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adip\",\n        replies: [],\n      },\n    ],\n  },\n];\n\n\n\nconst Comment = ({ data }) => {\n  const {id, snippet:{topLevelComment: {snippet: {authorDisplayName, authorProfileImageUrl, textOriginal }}}} = data;\n\n  return (\n    <div className=\"p-3 flex items-start gap-3 border border-gray-200 rounded-lg m-3 w-auto break-all\">\n      <button className=\" border border-black rounded-3xl min-h-[2rem] min-w-[2rem] h-8 w-8\">\n        <img\n          src={authorProfileImageUrl}\n          alt={authorDisplayName}\n          className=\"rounded-full\"\n        />\n      </button>\n      <div className=\"flex flex-col gap-1\">\n        <p className=\"font-bold text-sm\">{authorDisplayName}</p>\n        <p>{textOriginal}</p>\n      </div>\n    </div>\n  );\n};\n\n\n\nconst CommentList = ({ comment}) => {\n \n \n  return comment && comment.map((data) => (\n    <div key={data.id}>\n      <Comment data={data} />\n\n      {/* N level nested comment thread... Add replies */}\n      \n      {/* <div className=\"ml-8 pl-1 border border-black border-t-0 border-l-2 border-r-0 border-b-0\">\n        <CommentList comment={data.replies} />\n      </div> */}\n    </div>\n  ));\n};\n\n\n\nconst CommentContainer = ({commentCount, videoID}) => {\n  const [commentThreads, setCommentThreads] = useState()\n  useEffect(() => {\n    const getCommentThread = async() => {\n      const res = await fetch(YOUTUBE_COMMENT_THREAD_API(videoID));\n      const data = await res.json()\n      setCommentThreads(data?.items);\n    }\ngetCommentThread()\n  }, [])\n\n  return (\n    <div>\n      <div className=\"text-xl font-bold mt-5 w-auto\"> {commentCount} Comments </div>\n      <CommentList comment={commentThreads} />\n    </div>\n  );\n};\n\nexport default CommentContainer;\n","import React from 'react'\n\nconst ChatMessage = ({name, message}) => {\n  return (\n    <div className='flex gap-2 items-center bg-gray-50 p-2 mt-3 rounded-md'>\n        <button className=\"p-1 border-2 border-black rounded-3xl\">\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/709/709722.png\"\n            alt=\"user icon\"\n            className=\"h-3\"\n          />\n        </button>\n\n        <p className=\"font-bold\">{name}</p>\n        <p>{message}</p>\n    </div>\n  )\n}\n\nexport default ChatMessage","export const nameList = [\n    'Time','Past','Future','Dev',\n    'Fly','Flying','Soar','Soaring','Power','Falling',\n    'Fall','Jump','Cliff','Mountain','Rend','Red','Blue',\n    'Green','Yellow','Gold','Demon','Demonic','Panda','Cat',\n    'Kitty','Kitten','Zero','Memory','Trooper','XX','Bandit',\n    'Fear','Light','Glow','Tread','Deep','Deeper','Deepest',\n    'Mine','Your','Worst','Enemy','Hostile','Force','Video',\n    'Game','Donkey','Mule','Colt','Cult','Cultist','Magnum',\n    'Gun','Assault','Recon','Trap','Trapper','Redeem','Code',\n    'Script','Writer','Near','Close','Open','Cube','Circle',\n    'Geo','Genome','Germ','Spaz','Shot','Echo','Beta','Alpha',\n    'Gamma','Omega','Seal','Squid','Money','Cash','Lord','King',\n    'Duke','Rest','Fire','Flame','Morrow','Break','Breaker','Numb',\n    'Ice','Cold','Rotten','Sick','Sickly','Janitor','Camel','Rooster',\n    'Sand','Desert','Dessert','Hurdle','Racer','Eraser','Erase','Big',\n    'Small','Short','Tall','Sith','Bounty','Hunter','Cracked','Broken',\n    'Sad','Happy','Joy','Joyful','Crimson','Destiny','Deceit','Lies',\n    'Lie','Honest','Destined','Bloxxer','Hawk','Eagle','Hawker','Walker',\n    'Zombie','Sarge','Capt','Captain','Punch','One','Two','Uno','Slice',\n    'Slash','Melt','Melted','Melting','Fell','Wolf','Hound',\n    'Legacy','Sharp','Dead','Mew','Chuckle','Bubba','Bubble','Sandwich','Smasher','Extreme','Multi','Universe','Ultimate','Death','Ready','Monkey','Elevator','Wrench','Grease','Head','Theme','Grand','Cool','Kid','Boy','Girl','Vortex','Paradox'\n];\n\nexport const shortLiveChatMessages = [\n    \"Hi!\",\n    \"Hello!\",\n    \"Hey there!\",\n    \"Welcome!\",\n    \"How can I help?\",\n    \"Need assistance?\",\n    \"Any questions?\",\n    \"Here to help!\",\n    \"Chat with us!\",\n    \"Hello, there!\",\n    \"Hiya!\",\n    \"Greetings!\",\n    \"Ready to assist!\",\n    \"Ask away!\",\n    \"Hi! 😊\",\n    \"Hello! 🌟\",\n    \"Hey! 👋\",\n    \"Need support?\",\n    \"How may I assist?\",\n    \"Hi there! 🌼\",\n  ];\n\n\nexport function generateUserName(arr) {\n   return arr[Math.floor( Math.random() * arr.length )];\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addMessage } from \"../redux/liveChatSlice\";\nimport { generateUserName, nameList, shortLiveChatMessages } from \"../utils/functions/helper\";\n\nconst LiveChat = () => {\n    const [liveMessage, setLiveMessage] = useState(\"\")\n  const dispatch = useDispatch();\n  const chatMessage = useSelector((store) => store.liveChat.message);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      dispatch(\n        addMessage({\n          name: generateUserName(nameList),\n          message: generateUserName(shortLiveChatMessages),\n        })\n      );\n    }, 500);\n\n    return () => clearInterval(timer);\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"  w-full h-[460px] border border-gray-300 rounded-t-lg  \">\n      <p className=\" text-xl px-4 py-3 bg-gray-200  border border-t-0 border-r-0 border-b-2 border-l-0 \">\n        Live Chat\n        </p>\n      \n      <div className=\"flex flex-col-reverse px-4 overflow-y-scroll h-[89%] \">\n     \n        {\n            chatMessage.map((chat, index) =>  <ChatMessage key={index}\n                name={chat.name}\n                message={chat.message}\n              /> )\n        }\n       \n      </div>\n    </div>\n\n    <form className=\"flex items-center gap-4 border border-gray-300 rounded-b-lg py-5 px-4 w-full border-t-0 border-r-1 border-b-1 border-l-1\" onSubmit={(e) => {\n        e.preventDefault();\n       liveMessage !== \"\" && dispatch(addMessage({\n            name: \"Khushi Johri\" ,\n            message: liveMessage\n        }));\n        setLiveMessage(\"\")\n    }}>\n        <label className=\" flex items-center gap-4 w-full\">\n            <p className=\" font-bold\">Khushi Johri</p>\n        <input type=\"text\" placeholder=\"Chat\" className=\" border border-gray-300  px-2 rounded-md \" value={liveMessage} onChange={(e) => setLiveMessage(e.target.value)} />\n        </label>\n        <button className=\"border border-green-700 py-1 px-4 rounded-md bg-green-500 text-white font-bold\"  >Send</button>\n    </form>\n    </>\n  );\n};\n\nexport default LiveChat;\n","import React, { useEffect, useState } from 'react'\n\nconst ReadMoreCard = ({viewCount, publishedAt, description}) => {\n  const [isReadMore, setIsReadMore] = useState(false);\n\n  useEffect(() => {\n    setIsReadMore(false)\n  }, [])\n\n\n  return (\n    <div className='w-half bg-gray-100 my-8 p-3 rounded-xl'>\n        <div className='flex gap-4 font-bold'>\n            <p>{viewCount} views</p>\n            <p>{publishedAt}</p>\n        </div>\n        \n          <p className={`py-4 whitespace-pre-line ${!isReadMore && description?.length > 300 && \"leading-5 h-32 overflow-hidden line-clamp-5\"}`}>\n          {description}\n        </p>\n        \n        \n        { \n         description?.length > 300 && <button className=\"px-3 py-1 border border-gray-500 rounded-lg font-bold\" onClick={() => setIsReadMore(!isReadMore)}>{!isReadMore ? \"Show More\" : \"Show less\"}</button>\n        }\n    </div>\n  )\n}\n\nexport default ReadMoreCard","import React, { useEffect, useState } from 'react'\nimport { YOUTUBE_CATEGORY_VIDEO_API } from '../utils/data/youtube-api';\nimport VideoCard from './VideoCard';\n\nconst RecommendedVideos = ({searchKeyword}) => {\n    const [recommendedVideoList, setRecommendedVideoList] = useState([]);\n\n  useEffect(() => {\n    getVideosByCategory(searchKeyword)\n  }, [searchKeyword])\n  \n\n    const getVideosByCategory = async(searchKeyword) => {\n        const res = await fetch(YOUTUBE_CATEGORY_VIDEO_API(searchKeyword));\n        const data = await res.json()\n       setRecommendedVideoList(data.items);\n      }\n\n      console.log(recommendedVideoList);\n\n  return (\n    <div className='w-full mt-8'>\n        <div className=\"flex-col space-y-6\">\n        {\n            recommendedVideoList.map(video => <div key={video.id.videoId}> <VideoCard info={video} /> </div> )\n        }\n        </div>\n    </div>\n  )\n}\n\nexport default RecommendedVideos","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {useSearchParams } from \"react-router-dom\";\nimport CommentContainer from \"../CommentContainer\";\nimport LiveChat from \"../LiveChat\";\nimport LoadMoreCard from \"../ReadMoreCard\";\nimport { closeMenu } from \"../../redux/sideSlice\";\nimport numeral from \"numeral\";\nimport {dislikeToggle, likeCountHandler, likeToggle } from \"../../redux/likeDislikeSlice\";\nimport RecommendedVideos from \"../RecommendedVideos\";\nimport { RWebShare } from \"react-web-share\";\nimport { YOUTUBE_VIDEO_DETAILS_API_BY_ID } from \"../../utils/data/youtube-api\";\n\nconst Watch = () => {\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const searchParamsId = searchParams.get(\"v\");\n  const [videoDetails, setVideoDetails] = useState([]);\n\n  useEffect(() => {\n    dispatch(closeMenu());\n  });\n\n  useEffect(() => {\n    ;(async () => {\n      const res = await fetch(YOUTUBE_VIDEO_DETAILS_API_BY_ID(searchParamsId));\n      const data = await res.json();\n      setVideoDetails(data?.items?.[0])\n    })()\n  }, [searchParamsId]);\n\n  const { contentDetails, statistics, snippet } = videoDetails ?? {}\n  const { commentCount, favouriteCount, likeCount, viewCount, dislikeCount } = statistics ?? {}\n  const { channelTitle, description, publishedAt, tags, title } = snippet ?? {}\n\n  const {isLiked, likeCountStore, isDisliked} = useSelector((store) => store.likeDislike);\n\n  return (\n    <div className=\"flex gap-8 mt-8 px-4 max-sm:flex-col max-sm:items-center max-sm:px-2\">\n      <div className=\"w-full max-sm:w-auto\">\n        <div>\n          <iframe\n            className=\"w-[65vw] h-[65vh] max-sm:w-full max-sm:h-[40vh] rounded-md\"\n            src={\"https://www.youtube.com/embed/\" + searchParams.get(\"v\")}\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowFullScreen\n            loading=\"lazy\"\n          ></iframe>\n        </div>\n        <div>\n          <h1 className=\"text-2xl font-semibold py-4 max-sm:text-lg\">{title}</h1>\n        </div>\n\n        <div className=\"flex max-sm:flex-col max-sm:gap-4\">\n          <div className=\"flex items-center flex-[0.5] max-sm:justify-between\">\n            <div className=\"flex items-center gap-3 mr-12\">\n              <button className=\"p-2 border-2 border-black rounded-3xl h-13 w-auto\">\n                <img\n                  src=\"https://cdn-icons-png.flaticon.com/512/709/709722.png\"\n                  alt=\"user icon\"\n                  className=\"h-7 \"\n                  loading=\"lazy\"\n                />\n              </button>\n              <div>\n                <h3 className=\"text-xl font-semibold mb-[-2px]\">\n                  {channelTitle}\n                </h3>\n                <p className=\"text-gray-500 text-sm\">4.7k subscribers</p>\n              </div>\n            </div>\n\n            <button className=\"bg-red-600 rounded-full p-2 px-5 font-semibold text-white\">\n              Subscribe\n            </button>\n          </div>\n\n          <div className=\"flex flex-[0.5] items-center justify-end gap-4 max-sm:gap-2  max-sm:justify-between\">\n            <div className=\"flex items-center rounded-full py-2 bg-gray-100\">\n              <div\n                className=\"flex items-center gap-2 py-1 px-7 max-sm:px-3 border border-gray-300 border-t-0 border-r-1 border-b-0 border-l-0\"\n                onClick={() => {\n                  dispatch(likeToggle());\n                  dispatch(likeCountHandler(likeCount));\n                }}\n              >\n                <i\n                  className={`${\n                    isLiked ? \"fa-solid\" : \"fa-regular\"\n                  } fa-thumbs-up fa-xl`}\n                ></i>\n                <p className=\"text-md max-sm:text-sm\">{numeral(likeCountStore !== 0 ? likeCountStore : likeCount).format(\"0.a\")}</p>\n              </div>\n\n              <div className=\"flex items-center gap-2  py-1 px-7 max-sm:px-3\" onClick={() => {\n                dispatch(dislikeToggle());\n              }}>\n                <i className={`${isDisliked ? \"fa-solid\" : \"fa-regular\"} fa-thumbs-down fa-flip-horizontal fa-xl`}></i>\n              </div>\n            </div>\n\n            <RWebShare\n              data={{\n                text: \"Watch on Playlyst\",\n                url: \"https://play-lyst.web.app/watch?v=\" + searchParamsId ,\n                title: title,\n              }}\n            >\n            <div className=\"flex items-center rounded-full py-2 bg-gray-100\">\n              <div className=\" py-1 px-7 max-sm:px-3 flex items-center gap-3\">\n                <i className=\"fa-solid fa-share fa-xl\"></i>\n                <h3 className=\"text-md max-sm:text-sm\">Share</h3>\n              </div>\n            </div>\n            </RWebShare>\n\n            <div className=\"flex items-center rounded-full py-2 bg-gray-100\">\n              <div className=\" py-1 px-7 max-sm:px-3 flex items-center gap-3\">\n                <i className=\"fa-regular fa-bookmark\"></i>\n                <h3 className=\"text-md max-sm:text-sm\">Watch Later</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <LoadMoreCard\n            viewCount={viewCount}\n            publishedAt={publishedAt}\n            description={description ?? ''}\n          />\n        </div>\n\n        <div>\n          <CommentContainer commentCount={commentCount} videoID={searchParamsId } />\n        </div>\n      </div>\n\n      <div className=\" w-full\">\n        <div>\n          <LiveChat />\n        </div>\n        <div>\n          <RecommendedVideos searchKeyword={title}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Watch;\n"],"names":["formatNumber","num","found","suffix","threshold","find","x","Math","abs","toFixed","_ref","info","_useState","useState","_useState2","_slicedToArray","setVideoDetails","_useState3","_useState4","viewCount","setViewCount","_useState5","_useState6","channelInfo","setChannelInfo","_useState7","_useState8","isLoading","setIsLoading","isMenuOpen","useSelector","store","menu","_info$snippet","snippet","channelId","title","channelTitle","thumbnails","liveBroadcastContent","id","video_id","videoId","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$items$","_data$items$$statisti","res","data","wrap","_context","prev","next","fetch","YOUTUBE_VIDEO_DETAILS_API_BY_ID","sent","json","items","statistics","stop","getChannelDetails","_ref3","_callee2","_json$items$","_json$items$$snippet","_json$items$$snippet$","_context2","YOUTUBE_CHANNEL_API","default","apply","arguments","error","console","log","_jsx","_Fragment","children","Shimmer","Link","to","_jsxs","className","concat","src","medium","url","alt","loading","Comment","_data$snippet$topLeve","topLevelComment","authorDisplayName","authorProfileImageUrl","textOriginal","CommentList","_ref2","comment","map","commentCount","videoID","commentThreads","setCommentThreads","getCommentThread","_ref4","YOUTUBE_COMMENT_THREAD_API","name","message","nameList","shortLiveChatMessages","generateUserName","arr","floor","random","length","liveMessage","setLiveMessage","dispatch","useDispatch","chatMessage","liveChat","timer","setInterval","addMessage","clearInterval","chat","index","ChatMessage","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","publishedAt","description","isReadMore","setIsReadMore","onClick","searchKeyword","recommendedVideoList","setRecommendedVideoList","getVideosByCategory","YOUTUBE_CATEGORY_VIDEO_API","_x","video","VideoCard","_useSearchParams","useSearchParams","searchParams","searchParamsId","get","videoDetails","closeMenu","_data$items","contentDetails","likeCount","favouriteCount","dislikeCount","tags","_useSelector","likeDislike","isLiked","likeCountStore","isDisliked","frameBorder","allow","allowFullScreen","likeToggle","likeCountHandler","numeral","format","dislikeToggle","RWebShare","text","LoadMoreCard","CommentContainer","LiveChat","RecommendedVideos"],"sourceRoot":""}